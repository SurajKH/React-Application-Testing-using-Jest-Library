1.As a developer our primay goal is to build softwares that works.
2.To ensure our software works,we test the applications.
3.To test if the App / software works as expected.

Different types of Testings:

Mannual Testing:

1.An individual will open the website,interact with the website and ensure everything works as intented.
2.If we features is released , you repeat the same steps.
3.You may have to test not only the new feature but also the existing features.

Drawbacks

1.Time Consuming.
2.Complex repetitive tasks has a risk of human error.
3.we may not get the chance to test all features we should.

Automated Testing:

1.Programs that automate the task of testing our softwares.
2.write code to test the softwares.

Advantages:

1.No timeconsuming.
2.Reliable, consistent and not error prone.
3.Easy to identify and fix features that break tests.
4.Gives confidence when shipping software.


----------------------------------------------------------

Jest:

1. Jest is a javascript testing framework.
2. Test runner that finds tests,run the tests,determines whether the tests passed or failed and reports it back in human readable form.


RTL:

1.The core library is called the DOM Testing library, and RTL is simply around the core library to test React Applications is easier.

--------------------------------------------------------------------

Testing Pyramid:(Bottom to Top)

1.Unit Tests.
2.Integration Tests.
3.E2E Tests


Types of Tests:

1.Unit Tests:

Focus on testing the individual building blocks of an app.
ex: class or functional component.
Each unit or building block is tested in isolation.
Dependencies are mocked.
Run in a short amount of time and make it easier to pin-point failures.
Relatively easier to maintain.


3.E2E Tests:

Focus on end-end test for all the components involved in building/setting up of the applications.
Ex: real UI,backend database,real services.
Longer span of time.
Cost implications since w einteract with real API's.


Note: we are considering a typescript based reactjs application.

We will be considering these dependencies in our web application:

 "@testing-library/jest-dom": "^5.17.0",
 "@testing-library/react": "^13.4.0",
 "@testing-library/user-event": "^13.5.0",
 "@types/jest": "^27.5.2"

Lets consider the concept of Building the Test Cases over here:

   test(event,action(function action to be performed)=>{
      render(component)
      initializations of variables if necessary
      expect(render vs original)
   });
   
Note: 

1.We must have atleast one test in the Test Suite.

/*
   test(test_case_name,action(function action to be performed)=>{
      render(component)
      initializations of variables if necessary
      expect(render vs original)
   },function_timeout);
   
*/

TestCase Results:

Test Suites: 1 passed, 1 total
Tests:       2 passed, 2 total
Snapshots:   0 total
Time:        0.258 s, estimated 1 s
Ran all test suites.

Watch Usage
 › Press f to run only failed tests.
 › Press o to only run tests related to changed files.
 › Press q to quit watch mode.
 › Press p to filter by a filename regex pattern.
 › Press t to filter by a test name regex pattern.
 › Press Enter to trigger a test run.

Test Driven Development(TDD):

1.create tests that verify the functionality of a specific features.
2.Writes software code that will run the tets successfully when re-executed.
3.Refactor the code for optimization while ensuring the tests continue to pass.

Red-Green Testing:

1.Tests go from a red failed state to a green successfull state.
2.Lets consider the watch Mode in case of Testing:

2.1 ) Tests are executed only to the changed files,Caching comes into picture,wherein we tend to cache the result over here.

Running of Filtered Testing:

1.By Filename Regex Pattern.(Type the Filename)
2.By Test Name Regex Pattern.(Type the Test Name)

Then we can consider the concept of .skip and .only and the explanation stands for itself over here.

Grouping of Tests with Jest:

1.describe(name,function)

name: group name.
function: determines the function that contains the expectations to test.
